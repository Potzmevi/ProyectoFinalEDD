
//----------------------------------------------------
// The following code was generated by CUP v0.11b 20160615 (GIT 4ac7450)
//----------------------------------------------------

package CargaDatos;

import java_cup.runtime.*;
import Estructuras.*;
import Estructuras.ArbolB.LlaveEntero;
import Estructuras.ListaCircular.Nodo;
import Objetos.*;
import java.util.ArrayList;
import java_cup.runtime.XMLElement;
import java_cup.runtime.XMLElement;

/** CUP v0.11b 20160615 (GIT 4ac7450) generated parser.
  */
@SuppressWarnings({"rawtypes"})
public class Parser extends java_cup.runtime.lr_parser {

 public final Class getSymbolContainer() {
    return sym.class;
}

  /** Default constructor. */
  @Deprecated
  public Parser() {super();}

  /** Constructor which sets the default scanner. */
  @Deprecated
  public Parser(java_cup.runtime.Scanner s) {super(s);}

  /** Constructor which sets the default scanner. */
  public Parser(java_cup.runtime.Scanner s, java_cup.runtime.SymbolFactory sf) {super(s,sf);}

  /** Production table. */
  protected static final short _production_table[][] = 
    unpackFromStrings(new String[] {
    "\000\025\000\002\002\004\000\002\002\003\000\002\002" +
    "\003\000\002\002\003\000\002\002\003\000\002\002\003" +
    "\000\002\002\003\000\002\002\003\000\002\002\003\000" +
    "\002\002\003\000\002\004\016\000\002\004\016\000\002" +
    "\005\014\000\002\006\014\000\002\007\010\000\002\010" +
    "\014\000\002\011\016\000\002\012\024\000\002\013\016" +
    "\000\002\014\003\000\002\014\002" });

  /** Access to production table. */
  public short[][] production_table() {return _production_table;}

  /** Parse-action table. */
  protected static final short[][] _action_table = 
    unpackFromStrings(new String[] {
    "\000\153\000\024\003\014\004\011\012\007\013\015\014" +
    "\012\015\020\016\013\017\005\020\024\001\002\000\004" +
    "\002\ufff9\001\002\000\004\021\135\001\002\000\004\002" +
    "\ufffc\001\002\000\004\021\116\001\002\000\004\002\000" +
    "\001\002\000\004\021\105\001\002\000\004\021\100\001" +
    "\002\000\004\021\065\001\002\000\004\002\ufff8\001\002" +
    "\000\004\021\054\001\002\000\004\002\ufffa\001\002\000" +
    "\004\002\ufffe\001\002\000\004\021\043\001\002\000\004" +
    "\002\ufffd\001\002\000\004\002\uffff\001\002\000\004\002" +
    "\042\001\002\000\004\021\026\001\002\000\004\002\ufffb" +
    "\001\002\000\004\011\027\001\002\000\004\007\030\001" +
    "\002\000\004\011\031\001\002\000\004\007\032\001\002" +
    "\000\004\011\033\001\002\000\004\007\034\001\002\000" +
    "\004\011\035\001\002\000\004\022\036\001\002\000\004" +
    "\010\037\001\002\000\026\002\uffed\003\014\004\011\012" +
    "\007\013\015\014\012\015\020\016\013\017\005\020\024" +
    "\001\002\000\004\002\uffef\001\002\000\004\002\uffee\001" +
    "\002\000\004\002\001\001\002\000\004\023\044\001\002" +
    "\000\004\007\045\001\002\000\004\011\046\001\002\000" +
    "\004\007\047\001\002\000\004\011\050\001\002\000\004" +
    "\022\051\001\002\000\004\010\052\001\002\000\026\002" +
    "\uffed\003\014\004\011\012\007\013\015\014\012\015\020" +
    "\016\013\017\005\020\024\001\002\000\004\002\ufff2\001" +
    "\002\000\004\011\055\001\002\000\004\007\056\001\002" +
    "\000\004\023\057\001\002\000\004\007\060\001\002\000" +
    "\004\023\061\001\002\000\004\022\062\001\002\000\004" +
    "\010\063\001\002\000\026\002\uffed\003\014\004\011\012" +
    "\007\013\015\014\012\015\020\016\013\017\005\020\024" +
    "\001\002\000\004\002\ufff4\001\002\000\004\011\066\001" +
    "\002\000\004\007\067\001\002\000\004\023\070\001\002" +
    "\000\004\007\071\001\002\000\004\011\072\001\002\000" +
    "\004\007\073\001\002\000\004\011\074\001\002\000\004" +
    "\022\075\001\002\000\004\010\076\001\002\000\026\002" +
    "\uffed\003\014\004\011\012\007\013\015\014\012\015\020" +
    "\016\013\017\005\020\024\001\002\000\004\002\ufff1\001" +
    "\002\000\004\023\101\001\002\000\004\022\102\001\002" +
    "\000\004\010\103\001\002\000\026\002\uffed\003\014\004" +
    "\011\012\007\013\015\014\012\015\020\016\013\017\005" +
    "\020\024\001\002\000\004\002\ufff3\001\002\000\004\011" +
    "\106\001\002\000\004\007\107\001\002\000\004\023\110" +
    "\001\002\000\004\007\111\001\002\000\004\023\112\001" +
    "\002\000\004\022\113\001\002\000\004\010\114\001\002" +
    "\000\026\002\uffed\003\014\004\011\012\007\013\015\014" +
    "\012\015\020\016\013\017\005\020\024\001\002\000\004" +
    "\002\ufff5\001\002\000\004\011\117\001\002\000\004\007" +
    "\120\001\002\000\004\023\121\001\002\000\004\007\122" +
    "\001\002\000\004\023\123\001\002\000\004\007\124\001" +
    "\002\000\006\005\125\006\126\001\002\000\004\022\132" +
    "\001\002\000\004\022\127\001\002\000\004\010\130\001" +
    "\002\000\026\002\uffed\003\014\004\011\012\007\013\015" +
    "\014\012\015\020\016\013\017\005\020\024\001\002\000" +
    "\004\002\ufff6\001\002\000\004\010\133\001\002\000\026" +
    "\002\uffed\003\014\004\011\012\007\013\015\014\012\015" +
    "\020\016\013\017\005\020\024\001\002\000\004\002\ufff7" +
    "\001\002\000\004\011\136\001\002\000\004\007\137\001" +
    "\002\000\004\023\140\001\002\000\004\007\141\001\002" +
    "\000\004\023\142\001\002\000\004\007\143\001\002\000" +
    "\004\011\144\001\002\000\004\007\145\001\002\000\004" +
    "\011\146\001\002\000\004\007\147\001\002\000\004\024" +
    "\150\001\002\000\004\007\151\001\002\000\004\011\152" +
    "\001\002\000\004\022\153\001\002\000\004\010\154\001" +
    "\002\000\026\002\uffed\003\014\004\011\012\007\013\015" +
    "\014\012\015\020\016\013\017\005\020\024\001\002\000" +
    "\004\002\ufff0\001\002" });

  /** Access to parse-action table. */
  public short[][] action_table() {return _action_table;}

  /** <code>reduce_goto</code> table. */
  protected static final short[][] _reduce_table = 
    unpackFromStrings(new String[] {
    "\000\153\000\024\002\022\004\007\005\021\006\016\007" +
    "\020\010\005\011\024\012\015\013\003\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\026\002\040\004\007\005\021\006\016\007" +
    "\020\010\005\011\024\012\015\013\003\014\037\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\026\002\040\004\007\005\021\006\016\007\020" +
    "\010\005\011\024\012\015\013\003\014\052\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\026\002\040\004\007\005\021" +
    "\006\016\007\020\010\005\011\024\012\015\013\003\014" +
    "\063\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\026\002\040\004\007\005\021\006" +
    "\016\007\020\010\005\011\024\012\015\013\003\014\076" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\026\002\040\004\007\005\021" +
    "\006\016\007\020\010\005\011\024\012\015\013\003\014" +
    "\103\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\026\002\040" +
    "\004\007\005\021\006\016\007\020\010\005\011\024\012" +
    "\015\013\003\014\114\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\026\002\040\004\007\005\021\006\016\007\020\010\005" +
    "\011\024\012\015\013\003\014\130\001\001\000\002\001" +
    "\001\000\002\001\001\000\026\002\040\004\007\005\021" +
    "\006\016\007\020\010\005\011\024\012\015\013\003\014" +
    "\133\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\026\002\040\004\007\005\021\006\016\007" +
    "\020\010\005\011\024\012\015\013\003\014\154\001\001" +
    "\000\002\001\001" });

  /** Access to <code>reduce_goto</code> table. */
  public short[][] reduce_table() {return _reduce_table;}

  /** Instance of action encapsulation class. */
  protected CUP$Parser$actions action_obj;

  /** Action encapsulation object initializer. */
  protected void init_actions()
    {
      action_obj = new CUP$Parser$actions(this);
    }

  /** Invoke a user supplied parse action. */
  public java_cup.runtime.Symbol do_action(
    int                        act_num,
    java_cup.runtime.lr_parser parser,
    java.util.Stack            stack,
    int                        top)
    throws java.lang.Exception
  {
    /* call code in generated class */
    return action_obj.CUP$Parser$do_action(act_num, parser, stack, top);
  }

  /** Indicates start state. */
  public int start_state() {return 0;}
  /** Indicates start production. */
  public int start_production() {return 0;}

  /** <code>EOF</code> Symbol index. */
  public int EOF_sym() {return 0;}

  /** <code>error</code> Symbol index. */
  public int error_sym() {return 1;}



    //Listas
    private ArrayList<Estudiante> estudiantesList = new ArrayList<>();
    private ArrayList<Usuario> usuariosList = new ArrayList<>();
    private ArrayList<Edificio> edificiosList = new ArrayList<>();
    private ArrayList<Salon> salonesList = new ArrayList<>();
    private ArrayList<Catedratico> catedraticosList = new ArrayList<>();
    private ArrayList<Curso> cursosList = new ArrayList<>();
    private ArrayList<Horario> horariosList= new ArrayList<>();
    private ArrayList<Asignacion> asignacionesList = new ArrayList<>();

public ArrayList getEstudiantesList(){ 
            return estudiantesList;
        }
 
public void addEstudiante(Estudiante objeto){
            try {
                 estudiantesList.add(objeto);
                }
            catch(Exception e) {
                System.out.println("error encontrado: "+e);
                }
        }

public ArrayList getUsuarios(){ 
            return usuariosList;
        }

public void addUsuario(Usuario objeto){
            try {
                 usuariosList.add(objeto);
                }
            catch(Exception e) {
                System.out.println("error encontrado: "+e);
                }
        }

public ArrayList getEdificios(){ 
            return edificiosList;
        }

public void addEdificio(Edificio objeto){
            try {
                 edificiosList.add(objeto);
                }
            catch(Exception e) {
                System.out.println("error encontrado: "+e);
                }
        }

public ArrayList getSalones(){ 
            return salonesList;
        }

public void addSalon(Salon objeto){
            try {
                 salonesList.add(objeto);
                }
            catch(Exception e) {
                System.out.println("error encontrado: "+e);
                }
        }

public ArrayList getCatedratico(){ 
            return catedraticosList;
        }

public void addCatedratico(Catedratico objeto){
            try {
                 catedraticosList.add(objeto);
                }
            catch(Exception e) {
                System.out.println("error encontrado: "+e);
                }
        }

public ArrayList getCursos(){ 
            return cursosList;
        }

public void addCurso(Curso objeto){
            try {
                 cursosList.add(objeto);
                }
            catch(Exception e) {
                System.out.println("error encontrado: "+e);
                }
        }

public ArrayList getHorarios(){ 
            return horariosList;
        }

public void addHorario(Horario objeto){
            try {
                 horariosList.add(objeto);
                }
            catch(Exception e) {
                System.out.println("error encontrado: "+e);
                }
        }

public ArrayList getAsignaciones(){ 
            return asignacionesList;
        }

public void addAsignacion(Asignacion objeto){
            try {
                 asignacionesList.add(objeto);
                }
            catch(Exception e) {
                System.out.println("error encontrado: "+e);
                }
        }

	public Parser(Lexer lex) {
        super(lex);
    }		 


/** Cup generated class to encapsulate user supplied action code.*/
@SuppressWarnings({"rawtypes", "unchecked", "unused"})
class CUP$Parser$actions {
  private final Parser parser;

  /** Constructor */
  CUP$Parser$actions(Parser parser) {
    this.parser = parser;
  }

  /** Method 0 with the actual generated action code for actions 0 to 300. */
  public final java_cup.runtime.Symbol CUP$Parser$do_action_part00000000(
    int                        CUP$Parser$act_num,
    java_cup.runtime.lr_parser CUP$Parser$parser,
    java.util.Stack            CUP$Parser$stack,
    int                        CUP$Parser$top)
    throws java.lang.Exception
    {
      /* Symbol object for return from actions */
      java_cup.runtime.Symbol CUP$Parser$result;

      /* select the action based on the action number */
      switch (CUP$Parser$act_num)
        {
          /*. . . . . . . . . . . . . . . . . . . .*/
          case 0: // $START ::= INICIO EOF 
            {
              Object RESULT =null;
		int start_valleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)).left;
		int start_valright = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)).right;
		Object start_val = (Object)((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-1)).value;
		RESULT = start_val;
              CUP$Parser$result = parser.getSymbolFactory().newSymbol("$START",0, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          /* ACCEPT */
          CUP$Parser$parser.done_parsing();
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 1: // INICIO ::= CREARUSUARIO 
            {
              Object RESULT =null;

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("INICIO",0, ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 2: // INICIO ::= CREARESTUDIANTE 
            {
              Object RESULT =null;

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("INICIO",0, ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 3: // INICIO ::= CREARCATEDRATICO 
            {
              Object RESULT =null;

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("INICIO",0, ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 4: // INICIO ::= CREAREDIFICIO 
            {
              Object RESULT =null;

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("INICIO",0, ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 5: // INICIO ::= CREARSALON 
            {
              Object RESULT =null;

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("INICIO",0, ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 6: // INICIO ::= CREARCURSO 
            {
              Object RESULT =null;

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("INICIO",0, ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 7: // INICIO ::= CREARHORARIO 
            {
              Object RESULT =null;

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("INICIO",0, ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 8: // INICIO ::= CREARASIGNACION 
            {
              Object RESULT =null;

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("INICIO",0, ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 9: // INICIO ::= error 
            {
              Object RESULT =null;
		System.out.println("Error en expresion");
              CUP$Parser$result = parser.getSymbolFactory().newSymbol("INICIO",0, ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 10: // CREARUSUARIO ::= Usuario Parente_a Numero Coma Texto Coma Texto Coma EstudianteUs Parente_c PuntoComa FINOINICIO 
            {
              Object RESULT =null;
		int n1left = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-9)).left;
		int n1right = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-9)).right;
		Token n1 = (Token)((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-9)).value;
		int t1left = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-7)).left;
		int t1right = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-7)).right;
		Token t1 = (Token)((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-7)).value;
		int t2left = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-5)).left;
		int t2right = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-5)).right;
		Token t2 = (Token)((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-5)).value;
		int t3left = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-3)).left;
		int t3right = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-3)).right;
		Token t3 = (Token)((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-3)).value;
		
                        try{
                           addUsuario(new Usuario(Integer.parseInt(n1.getLexeme()), t1.getLexeme().replace("\"", ""), t2.getLexeme().replace("\"", ""), t3.getLexeme().toUpperCase().replace("\"", "")));
                       }catch(Exception e){}
              CUP$Parser$result = parser.getSymbolFactory().newSymbol("CREARUSUARIO",2, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-11)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 11: // CREARUSUARIO ::= Usuario Parente_a Numero Coma Texto Coma Texto Coma Colaborador Parente_c PuntoComa FINOINICIO 
            {
              Object RESULT =null;
		int n1left = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-9)).left;
		int n1right = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-9)).right;
		Token n1 = (Token)((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-9)).value;
		int t1left = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-7)).left;
		int t1right = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-7)).right;
		Token t1 = (Token)((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-7)).value;
		int t2left = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-5)).left;
		int t2right = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-5)).right;
		Token t2 = (Token)((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-5)).value;
		int t3left = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-3)).left;
		int t3right = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-3)).right;
		Token t3 = (Token)((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-3)).value;
		 try{addUsuario(new Usuario(Integer.parseInt(n1.getLexeme()), t1.getLexeme().replace("\"", ""), t2.getLexeme().replace("\"", ""), t3.getLexeme().toUpperCase().replace("\"", "")));}catch(Exception e){}
              CUP$Parser$result = parser.getSymbolFactory().newSymbol("CREARUSUARIO",2, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-11)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 12: // CREARESTUDIANTE ::= Estudiante Parente_a Numero Coma Texto Coma Texto Parente_c PuntoComa FINOINICIO 
            {
              Object RESULT =null;
		int n1left = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-7)).left;
		int n1right = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-7)).right;
		Token n1 = (Token)((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-7)).value;
		int t1left = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-5)).left;
		int t1right = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-5)).right;
		Token t1 = (Token)((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-5)).value;
		int t2left = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-3)).left;
		int t2right = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-3)).right;
		Token t2 = (Token)((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-3)).value;
		try{addEstudiante(new Estudiante(Integer.parseInt(n1.getLexeme()), t1.getLexeme().replace("\"", ""), t2.getLexeme().replace("\"", "")));}catch(Exception e){}
              CUP$Parser$result = parser.getSymbolFactory().newSymbol("CREARESTUDIANTE",3, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-9)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 13: // CREARCATEDRATICO ::= Catedratico Parente_a Numero Coma Texto Coma Texto Parente_c PuntoComa FINOINICIO 
            {
              Object RESULT =null;
		int n1left = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-7)).left;
		int n1right = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-7)).right;
		Token n1 = (Token)((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-7)).value;
		int t1left = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-5)).left;
		int t1right = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-5)).right;
		Token t1 = (Token)((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-5)).value;
		int t2left = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-3)).left;
		int t2right = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-3)).right;
		Token t2 = (Token)((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-3)).value;
		try{addCatedratico(new Catedratico(n1.getLexeme(),t1.getLexeme().replace("\"", ""),t2.getLexeme().replace("\"", "")));}catch(Exception e){}
              CUP$Parser$result = parser.getSymbolFactory().newSymbol("CREARCATEDRATICO",4, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-9)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 14: // CREAREDIFICIO ::= Edificio Parente_a Texto Parente_c PuntoComa FINOINICIO 
            {
              Object RESULT =null;
		int t1left = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-3)).left;
		int t1right = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-3)).right;
		Token t1 = (Token)((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-3)).value;
		try{addEdificio(new Edificio(t1.getLexeme().replace("\"", "")));}catch(Exception e){}
              CUP$Parser$result = parser.getSymbolFactory().newSymbol("CREAREDIFICIO",5, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-5)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 15: // CREARSALON ::= Salon Parente_a Texto Coma Numero Coma Numero Parente_c PuntoComa FINOINICIO 
            {
              Object RESULT =null;
		int t1left = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-7)).left;
		int t1right = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-7)).right;
		Token t1 = (Token)((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-7)).value;
		int n1left = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-5)).left;
		int n1right = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-5)).right;
		Token n1 = (Token)((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-5)).value;
		int n2left = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-3)).left;
		int n2right = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-3)).right;
		Token n2 = (Token)((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-3)).value;
		
                    try{
                    addSalon(new Salon(t1.getLexeme().replace("\"", ""),Integer.parseInt(n1.getLexeme()), Integer.parseInt(n2.getLexeme())));}catch(Exception e){}
              CUP$Parser$result = parser.getSymbolFactory().newSymbol("CREARSALON",6, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-9)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 16: // CREARCURSO ::= Curso Parente_a Numero Coma Texto Coma Numero Coma Numero Parente_c PuntoComa FINOINICIO 
            {
              Object RESULT =null;
		int n1left = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-9)).left;
		int n1right = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-9)).right;
		Token n1 = (Token)((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-9)).value;
		int t1left = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-7)).left;
		int t1right = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-7)).right;
		Token t1 = (Token)((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-7)).value;
		int n2left = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-5)).left;
		int n2right = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-5)).right;
		Token n2 = (Token)((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-5)).value;
		int n3left = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-3)).left;
		int n3right = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-3)).right;
		Token n3 = (Token)((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-3)).value;
		try{addCurso(new Curso(Integer.parseInt(n1.getLexeme()), t1.getLexeme().replace("\"", ""), Integer.parseInt(n2.getLexeme()), Integer.parseInt(n3.getLexeme())));}catch(Exception e){}
              CUP$Parser$result = parser.getSymbolFactory().newSymbol("CREARCURSO",7, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-11)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 17: // CREARHORARIO ::= Horario Parente_a Numero Coma Texto Coma Texto Coma Numero Coma Numero Coma TextoSin Coma Numero Parente_c PuntoComa FINOINICIO 
            {
              Object RESULT =null;
		int n1left = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-15)).left;
		int n1right = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-15)).right;
		Token n1 = (Token)((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-15)).value;
		int t1left = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-13)).left;
		int t1right = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-13)).right;
		Token t1 = (Token)((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-13)).value;
		int t2left = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-11)).left;
		int t2right = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-11)).right;
		Token t2 = (Token)((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-11)).value;
		int n2left = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-9)).left;
		int n2right = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-9)).right;
		Token n2 = (Token)((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-9)).value;
		int n3left = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-7)).left;
		int n3right = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-7)).right;
		Token n3 = (Token)((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-7)).value;
		int t3left = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-5)).left;
		int t3right = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-5)).right;
		Token t3 = (Token)((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-5)).value;
		int n4left = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-3)).left;
		int n4right = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-3)).right;
		Token n4 = (Token)((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-3)).value;
		
try{
                    Horario horario = new Horario(Integer.valueOf(n1.getLexeme()), t1.getLexeme().replace("\"", "") ,t2.getLexeme().replace("\"", ""), Integer.valueOf(n2.getLexeme()),t3.getLexeme(), Integer.valueOf(n3.getLexeme()), Integer.valueOf(n4.getLexeme()));
                    addHorario(horario);}catch(Exception e){} 
              CUP$Parser$result = parser.getSymbolFactory().newSymbol("CREARHORARIO",8, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-17)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 18: // CREARASIGNACION ::= Asignar Parente_a Numero Coma Numero Coma Numero Coma Numero Parente_c PuntoComa FINOINICIO 
            {
              Object RESULT =null;
		int n1left = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-9)).left;
		int n1right = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-9)).right;
		Token n1 = (Token)((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-9)).value;
		int n2left = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-7)).left;
		int n2right = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-7)).right;
		Token n2 = (Token)((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-7)).value;
		int n3left = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-5)).left;
		int n3right = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-5)).right;
		Token n3 = (Token)((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-5)).value;
		int n4left = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-3)).left;
		int n4right = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-3)).right;
		Token n4 = (Token)((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-3)).value;
		
try{           
                        Asignacion asig = new Asignacion( Integer.valueOf(n1.getLexeme()), Integer.valueOf(n2.getLexeme()), Integer.valueOf(n3.getLexeme()), Integer.valueOf(n4.getLexeme()));
                        addAsignacion(asig); }catch(Exception e){} 
              CUP$Parser$result = parser.getSymbolFactory().newSymbol("CREARASIGNACION",9, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-11)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 19: // FINOINICIO ::= INICIO 
            {
              Object RESULT =null;

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("FINOINICIO",10, ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 20: // FINOINICIO ::= 
            {
              Object RESULT =null;

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("FINOINICIO",10, ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /* . . . . . .*/
          default:
            throw new Exception(
               "Invalid action number "+CUP$Parser$act_num+"found in internal parse table");

        }
    } /* end of method */

  /** Method splitting the generated action code into several parts. */
  public final java_cup.runtime.Symbol CUP$Parser$do_action(
    int                        CUP$Parser$act_num,
    java_cup.runtime.lr_parser CUP$Parser$parser,
    java.util.Stack            CUP$Parser$stack,
    int                        CUP$Parser$top)
    throws java.lang.Exception
    {
              return CUP$Parser$do_action_part00000000(
                               CUP$Parser$act_num,
                               CUP$Parser$parser,
                               CUP$Parser$stack,
                               CUP$Parser$top);
    }
}

}
